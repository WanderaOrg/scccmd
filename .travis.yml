language: go
go:
- 1.14.3
- master

notifications:
  email:
    on_success: never
    on_failure: always

matrix:
  # It's ok if our code fails on unstable development versions of Go.
  allow_failures:
  - go: master
  # Don't wait for tip tests to finish. Mark the test run green if the
  # tests pass on the stable versions of Go.
  fast_finish: true
cache:
  directories:
  - $GOPATH/pkg

env:
- GO111MODULE=on

install:
- go get -u golang.org/x/lint/golint

script:
- go test -v ./...
- go vet -v ./...
- golint -set_exit_status $(go list ./...)
- |
  if [ -n "$(gofmt -s -l $(find . -type f -name '*.go'))" ]; then
      echo "Go code is not formatted:"
      gofmt -s -d -e $(find . -type f -name '*.go')
      exit 1
  fi

before_deploy:
  - PLATFORMS=(darwin/amd64 freebsd/amd64 linux/amd64 windows/amd64)

 # build binary for all archs
  - |
    for PLATFORM in "${PLATFORMS[@]}"; do
      echo "Building $PLATFORM"
      GOOS=${PLATFORM%/*}
      GOARCH=${PLATFORM#*/}
      if [ "$GOOS" = "windows" ]; then
        build_cmd="GOOS=$GOOS GOARCH=$GOARCH go build -o scccmd -ldflags '-w -s -X 'github.com/wandera/scccmd/cmd.Version=${TRAVIS_TAG}"
      else
        build_cmd="CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -o scccmd -ldflags '-w -s -X 'github.com/wandera/scccmd/cmd.Version=${TRAVIS_TAG}"
      fi
      if ! eval $build_cmd; then
        echo "Failed building sample for $PLATFORM" && return 1
      fi
      if [ "$GOOS" = "windows" ]; then
        zip scccmd-${GOOS}-${GOARCH}.zip scccmd
      else
        tar cvzf scccmd-${GOOS}-${GOARCH}.tgz scccmd
      fi
    done
  - ls

deploy:
  provider: releases
  api_key:
    secure: oTGw6aQhRfQOYs4k75uQPR2f0FPbDsrwJXll1JiCtDx1CyoTCAoVRSuBbntuifrhBGqp9kPdxwllHX5c4I0ApAQ+JnxnUUHCyUOJl9bM467Se5EB5sk78lWDZZTzedzoAr0lM0xHHk8FWZFveVgsy0BDXxFkdXZR+Dl1WJ45dJXHKXkHMtsKoWRebLYpXvBctt0MdMtX3f0Z2mUEZy3Ck9pD9zbOq9VGQoT38RUgjF71cDiUbOTd8oqdAw9CfJGfW1S/LZpZeZMWTt6bNNkXXElSyy9b/ACcBu3KpvSqvnZeL6pkTDxKhqZv7XjiCIW6c54fkwMJ80N51Ql9kl/PAsO3ISe8E7iRLNc4x7HZuaBJFfn+xxsJmlPacAV0gXL9OvBZHj2sA6jR6SrAnhIMZjvKV0dg+dzrhkc9Ab7r5V5ffkrGXoWtG8E8ewo+NzknQN7yDtu4i2B2Xzq1hzXv/UnONBMhOc7MWKA7LbCKLytnk864BQ+yu3KnakIf3ZEwzTIt3+evVpoRfrFRUyKa/9YxPeZ1IoNDMbjwu/wT1kvW/x9ZczPuy2EV8N5ceFD8jAo4CcWMu0IJVQCXPrHQ1BwSndxANs+XmgZigxBMEAGBh+WFLaYCP4Jt39SLNi/Sqh/pBUstcCNrwAzJUp0GMsZsNEi7BOYsbs0IL31oOuQ=
  file:
    - "scccmd-darwin-amd64.tgz"
    - "scccmd-freebsd-amd64.tgz"
    - "scccmd-linux-amd64.tgz"
    - "scccmd-windows-amd64.zip"
  skip_cleanup: true
  on:
    tags: true
